@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getSpeedX():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    # shoootStrategy:ShootStrategy
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy)
    + decreaseHp(int decrease):void
    + getHp():int
    + setShootStrategy(ShootStrategy strategy):void
    + getShootStrategy(): ShootStrategy
    + shoot():List<BaseBullet>
 }

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

abstract class AbstractProp{
    + AbstractProp(int locationX, int locationY, int speedX, int speedY)
    + {abstract}function(HeroAircraft heroAircraft):void
}

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- AbstractProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- BossEnemy

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

AbstractProp <|-- BloodProp
AbstractProp <|-- BombProp
AbstractProp <|-- FireProp

class HeroAircraft {
    - {static} heroAircraft:HeroAircraft
    - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy)
    + getHeroAircraft():HeroAircraft
    + forward():void
    + increaseHp(int increase):void
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy)
    + forward():void
    + update():void
}

class EliteEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy)
    + forward():void
    + update():void
}

class BossEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy)
    + forward():void
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,int speedX, int speedY, int power)
    + update():void
}

class BloodProp{
    + BloodProp(int locationX, int locationY, int speedX, int speedY)
    + function(HeroAircraft heroAircraft):void
}
class BombProp{
    - enemyAndEnemyBullet:List<AbstractFlyingObject>
    + BombProp(int locationX, int locationY, int speedX, int speedY)
    + addBombed(AbstractFlyingObject bombed):void
    + removeBombed(AbstractFlyingObject bombed):void
    + notifyAllSub():void
    + function(HeroAircraft heroAircraft):void
}
class FireProp{
    + FireProp(int locationX, int locationY, int speedX, int speedY)
    + function(HeroAircraft heroAircraft):void
}

interface BombpropActivateUpdate{
    + update():void
    }

BombpropActivateUpdate <|.. EliteEnemy
BombpropActivateUpdate <|.. MobEnemy
BombpropActivateUpdate <|.. EnemyBullet


skinparam dpi 500
@enduml